{"version":3,"sources":["Components/CityComponent.js","Components/WeatherComponent.js","App.js","index.js"],"names":["WeatherLogo","styled","img","ChooseCityLabel","span","SearchBox","form","CityComponent","props","setCity","fetchWeather","src","onSubmit","placeholder","onChange","e","target","value","type","WeatherInfoIcons","sunset","sunrise","humidity","wind","pressure","WeatherIcons","WeatherCondition","div","Condition","Location","WeatherInfoLabel","WeatherInfoContainer","InfoContainer","InfoIcon","InfoLabel","WeatherInfoComponent","name","WeatherComponent","timeStamp","weather","isDay","icon","includes","Math","floor","main","temp","description","sys","country","Date","getHours","getMinutes","speed","Container","AppLabel","App","useState","city","setWeather","a","preventDefault","axios","get","response","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3cbe7f42.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst WeatherLogo = styled.img`\nwidth: 140px;\nheight: 140px;\nmargin: 40px 25px auto;\n`;\n\nconst ChooseCityLabel = styled.span`\ncolor: black;\nfont-size: 1.15rem;\nfont-weight: bold;\nmargin: 10px auto;\n`;\n\nconst SearchBox = styled.form`\ndisplay: flex;\nflex-direction: row;\nborder: 1px solid black;\nborder-radius: 2px;\ncolor: black;\nfont-size: 1.15rem;\nfont-weight: bold;\nmargin: 20px auto;\n\n& input {\n    padding: 10px;\n    font-size: 16px;\n    border: none;\n    font-weight: bold;\n    outline: none;\n}\n\n& button {\n    padding: 10px;\n    font-size: 16px;\n    color: white;\n    background: #3C887E;\n    border: none;\n    font-weight: bold;\n    cursor: pointer;\n}\n`;\n\nconst CityComponent = (props) => {\n    const {setCity, fetchWeather} = props;\n    return (\n        <>\n        <WeatherLogo src=\"/react-weather-app/icons/day.svg\"/>\n        <ChooseCityLabel>Find weather of city</ChooseCityLabel>\n        <SearchBox onSubmit={fetchWeather}>\n            <input placeholder=\"Enter city here\" onChange={(e)=>setCity(e.target.value)}/>\n            <button type=\"submit\">Search</button>\n        </SearchBox>\n        </>\n    )\n};\n\nexport default CityComponent;","import styled from \"styled-components\";\nimport React from \"react\";\n\nexport const WeatherInfoIcons = {\n    sunset: \"/react-weather-app/icons/temp.svg\",\n    sunrise: \"/react-weather-app/icons/temp.svg\",\n    humidity: \"/react-weather-app/icons/humidity.svg\",\n    wind: \"/react-weather-app/icons/wind.svg\",\n    pressure: \"/react-weather-app/icons/pressure.svg\",\n};\n\nexport const WeatherIcons = {\n    \"01d\": \"/react-weather-app/icons/sunny.svg\",\n    \"01n\": \"/react-weather-app/icons/night.svg\",\n    \"02d\": \"/react-weather-app/icons/day.svg\",\n    \"02n\": \"/react-weather-app/icons/cloudy-night.svg\",\n    \"03d\": \"/react-weather-app/icons/cloudy.svg\",\n    \"03n\": \"/react-weather-app/icons/cloudy.svg\",\n    \"04d\": \"/react-weather-app/icons/perfect-day.svg\",\n    \"04n\": \"/react-weather-app/icons/cloudy-night.svg\",\n    \"09d\": \"/react-weather-app/icons/rain.svg\",\n    \"09n\": \"/react-weather-app/icons/rain-night.svg\",\n    \"10d\": \"/react-weather-app/icons/rain.svg\",\n    \"10n\": \"/react-weather-app/icons/rain-night.svg\",\n    \"11d\": \"/react-weather-app/icons/storm.svg\",\n    \"11n\": \"/react-weather-app/icons/storm.svg\",\n};\n\nconst WeatherCondition = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    width: 100%;\n    justify-content: space-between;\n    margin: 30px auto;\n`;\n\nconst Condition = styled.span`\n    margin: 20px auto;\n    font-size: 1.25rem;\n    & span {\n        font-size: 2rem;\n        font-weight: bold;\n    };\n`;\n\nconst WeatherLogo = styled.img`\n    width: 100px;\n    height: 100px;\n    margin: 5px auto;\n`;\n\nconst Location = styled.span`\n    font-size: 1.75rem;\n    font-weight: bold;\n`;\n\nconst WeatherInfoLabel = styled.span`\n    font-size: 1.2rem;\n    font-weight: bold;\n    margin: 30px 10px;\n    text-align: start;\n    width: 90%;\n`;\n\nconst WeatherInfoContainer = styled.div`\n    display: flex;\n    width: 90%;\n    flex-direction: row;\n    justify-content: space-evenly;\n    align-items: center;\n    flex-wrap: wrap;\n`;\n\nconst InfoContainer = styled.div`\n    display: flex;\n    margin: 5px 10px;\n    flex-direction: row;\n    justify-content: space-evenly;\n    align-items: center;\n`;\n\nconst InfoIcon = styled.img`\n    width: 36px;\n    height: 36px;\n`;\n\nconst InfoLabel = styled.span`\n    display: flex;\n    flex-direction: column;\n    font-size: 1.25rem;\n    margin: 15px;\n    & span {\n        font-size: 1.15rem;\n        text-transform: uppercase;\n    };\n`;\n\nconst WeatherInfoComponent = (props) => {\n    const { name, value } = props;\n    return (\n        <InfoContainer>\n            <InfoIcon src={WeatherInfoIcons[name]} />\n            <InfoLabel>\n            {value}\n            <span>{name}</span>\n            </InfoLabel>\n        </InfoContainer>\n    );\n};\n\nconst WeatherComponent = (props) => {\n    const { weather } = props;\n    const isDay = weather?.weather[0].icon?.includes('d')\n    const getTime = (timeStamp) => {\n        return `${new Date(timeStamp * 1000).getHours()} : ${new Date(timeStamp * 1000).getMinutes()}`\n    }\n\n    return (\n    <>\n        <WeatherCondition>\n            <Condition><span>{`${Math.floor(weather?.main.temp - 273)}Â°C`}</span>{` | ${weather?.weather[0].description}`}</Condition>\n            <WeatherLogo src={WeatherIcons[weather?.weather[0].icon]}/>\n        </WeatherCondition>\n        <Location>{`${weather?.name}, ${weather?.sys?.country}`}</Location>\n        <WeatherInfoLabel>Weather Info</WeatherInfoLabel>\n        <WeatherInfoContainer>\n            <WeatherInfoComponent \n                name={isDay ? \"sunset\" : \"sunrise\"} \n                value ={getTime(weather?.sys[isDay ? \"sunset\" : \"sunrise\"])}\n            />\n            <WeatherInfoComponent name=\"humidity\" value ={weather?.main?.humidity}/>\n            <WeatherInfoComponent name=\"wind\" value ={weather?.wind?.speed}/>\n            <WeatherInfoComponent name=\"pressure\" value ={weather?.main?.pressure}/>\n        </WeatherInfoContainer>\n    </>\n    );\n};\n\nexport default WeatherComponent;","import axios from \"axios\";\nimport { React, useState } from \"react\";\nimport styled from \"styled-components\"\nimport CityComponent from \"./Components/CityComponent\";\nimport WeatherComponent from \"./Components/WeatherComponent\";\n\nconst API_KEY = \"12a02b4c778046e0d4422276825b5d1c\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: auto;\n  align-items: center;\n  box-shadow: 0 3px 6px 0 #555;\n  background: #E0F2E9;\n  padding: 20px 10px;\n  border-radius: 25px;\n  width: 420px;\n  font-family: Montserrat;\n`;\n\nconst AppLabel = styled.span`\n  color:  black;\n  font-size: 1.8rem;\n  font-weight: bold;\n`;\n\nfunction App() {\n  const [city, setCity] = useState();\n  const [weather, setWeather] = useState();\n\n  const fetchWeather = async (e) => {\n    e.preventDefault();\n    const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`);\n    setWeather(response.data);\n    };\n\n\n  return ( \n    <Container>\n      <AppLabel>React Weather App</AppLabel>\n      {weather ? (<WeatherComponent weather ={weather} />\n      ) : (\n      <CityComponent setCity={setCity} fetchWeather={fetchWeather}/>\n      )}\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}